name: CI Pipeline
on:
  push:
    branches: [master, main]
env:
  region: ${{ secrets.AWS_DEFAULT_REGION }}
  ## DO NOT CHANGE, you will overwrite others' projects if you remove your prefix
  S3_bucket: s3://${{ secrets.STATIC_SITE_BUCKET_PREFIX }}/<% .Name %>
jobs:
  unit-test:
    runs-on: ubuntu-latest
    env:
      CI: true
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    steps:
    - uses: actions/checkout@v2
    - name: Run Unit Tests
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - run: |
        echo "Run your tests here"
    - if: env.AWS_ACCESS_KEY_ID == null
      run: |
        echo "AWS Credentials not found, This is expected for the first run as the repo is provisioned then secrets are injected at a later step."
        exit 1
  build:
      needs: unit-test
      runs-on: ubuntu-latest
      env:
        CI: true
      steps:
        - uses: actions/checkout@v2
        - name: Build Static Site
          uses: actions/setup-node@v1
          with:
            node-version: 14.x
        - name: Install Dependencies
          run: npm install
        - run: |
            <% index .Params `build_command` %>
        - name: Upload build artifact to Github
          uses: actions/upload-artifact@v1
          with:
            name: build-artifact
            path: <% index .Params `build_output_folder` %>
  deploy:
      name: Deploy
      runs-on: ubuntu-latest
      needs: build

      steps:
      # Once github action supports nested composite actions (anything `uses` is a composite action)
      # Therefore we cannot reuse the code as a separate composite action until it supports it,
      # current the deploy logic is in this file twice because of it
      ## https://github.com/actions/runner/issues/862
      - uses: actions/checkout@v2
      - name: Configure AWS credentials for S3 sync
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.region }}
      - name: Download build artifact from Github
        uses: actions/download-artifact@v1
        with:
          name: build-artifact
          path: build/
      - name: Sync with S3
        shell: bash
        run: |
          cd build
          aws s3 sync . ${{ env.S3_bucket }}
      - name: Invalidate Cloudfront
        shell: bash
        run: |
          export DIST_ID=$(aws cloudfront list-distributions --query "DistributionList.Items[?Aliases.Items[?@=='${{ secrets.STATIC_SITE_BUCKET_PREFIX }}']].Id | [0]" | tr -d '"')
          aws cloudfront create-invalidation --distribution-id ${DIST_ID} --paths "/*"
